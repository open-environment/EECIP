@using EECIP.App_Logic.BusinessLogicLayer
@model EECIP.Models.vmForumTopicView
@{
    // Set a ViewBag for the category
    var qs = Request.QueryString["order"] ?? string.Empty;
}


@*@Html.Action("GetTopicBreadcrumb", "Topic", new { topic = Model.Topic })*@

<div class="row">
    <div class="col-md-9">

        <div class="topicshow">
            <div class="topicheading">
                <div class="widgetright">
                    @if (Model.IsSubscribed)
                    {
                    <a href="#" class="emailunsubscription" data-id="@Model.Topic.Id" data-type="topic">
                        <span class="glyphicon glyphicon-minus" aria-hidden="true"></span>Unsubscribe
                    </a>
                    }
                    else
                    {
                    <a href="#" class="emailsubscription" data-id="@Model.Topic.Id" data-type="topic">
                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>Subscribe
                    </a>
                    }
                </div>
                <h1>@Html.Raw(Model.Topic.Name)</h1>
                <ul class="topicinfo">
                    @if (Model.Topic.IsSticky)
                    {
                    <li><span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span> Topic Is Sticky</li>
                    }
                    @if (Model.Topic.IsLocked)
                    {
                        <li><span class="glyphicon glyphicon-lock" aria-hidden="true"></span> Topic Is Locked</li>
                    }

                    @if (Model.Topic.Poll != null)
                    {
                        <li>
                            <span class="glyphicon glyphicon-align-left" aria-hidden="true"></span> Poll
                            @if (Model.Topic.Poll.IsClosed)
                            {
                                <text>Closed</text>
                            }
                        </li>
                    }
                    <li><span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span> @Model.Views Views</li>
                    <li><span class="glyphicon glyphicon-comment" aria-hidden="true"></span> Last Post @Model.LastPostDatePretty</li>

                    @if (Model.Topic.Solved)
                    {
                    <li><span class="glyphicon glyphicon-ok text-success" aria-hidden="true"></span> Topic Is Solved</li>
                    }

                </ul>

            </div>

            @if (Model.Poll != null)
            {
                // Show the poll if there is one
                Html.RenderPartial("_Poll", Model.Poll);
            }

            <div class="topicstarterpost">
                @{
                    Html.RenderPartial("_Post", Model.StarterPost);
                }
                @if (Model.TotalCount > 0)
                {
                    <div class="row topicstarterpostbeginpostsheading">
                        <div class="col-md-8 hidden-xs topicstarterpostcomments">
                            @(Model.TotalCount) Comments
                        </div>
                        <div class="col-md-4 topicpostorderfilter">
                            @if ((Model.TotalCount - 1) > 0)
                            {
                                @*<text> Order By:
                                <a class="orderfilerlink @(string.IsNullOrEmpty(qs) ? "orderfilerlinkactive" : "")" href="@Model.Topic.NiceUrl">@Html.LanguageString("PostFilter.Standard")</a> |
                                <a class="orderfilerlink @(qs.Contains(PostOrderBy.Newest.ToString()) ? "orderfilerlinkactive" : "")" href="?@AppConstants.PostOrderBy=@PostOrderBy.Newest.ToString()">@Html.LanguageString("PostFilter.Newest")</a> |
                                <a class="orderfilerlink @(qs.Contains(PostOrderBy.Votes.ToString()) ? "orderfilerlinkactive" : "")" href="?@AppConstants.PostOrderBy=@PostOrderBy.Votes.ToString()">@Html.LanguageString("PostFilter.Votes")</a>
                                </text>*@
                            }
                        </div>
                    </div>
                }
            </div>

            @foreach (var post in Model.Posts)
            {
                <div>dd</div>
                //Html.RenderPartial("_Post", post);
            }

            @*@if (Model.TotalPages > 1)
            {
                <a href="#" class="showmoreposts btn-mvc btn-mvc-large btn-mvc-fullwidth">
                    <span class="smpactive">@Html.LanguageString("Topic.ShowMorePosts")</span>
                    <span class="smploading" style="display: none;">@Html.LanguageString("Topic.ShowMorePostsLoading")</span>
                </a>
            }*@

            @*@if (!Model.Topic.IsLocked)
            {
                <span id="newpostmarker"></span>

                if (!Model.Permissions[SiteConstants.Instance.PermissionDenyAccess].IsTicked && !Model.Permissions[SiteConstants.Instance.PermissionReadOnly].IsTicked && !Model.Topic.Category.IsLocked)
                {
                    @Html.Partial("_CreateNewPost", new CreateAjaxPostViewModel { Topic = Model.Topic.Id, DisablePosting = Model.DisablePosting, PostContent = Model.QuotedPost, InReplyTo = Model.ReplyTo, ReplyToUsername = Model.ReplyToUsername })
                }
                <a id="createpost"></a>
            }
            else
            {
                <p class="topiclockedmessage">Topic Is Locked</p>
            }*@


            <input type="hidden" id="pageIndex" value="@(Model.PageIndex + 1)" />
            <input type="hidden" id="topicId" value="@Model.Topic.Id" />
            <input type="hidden" id="totalPages" value="@Model.TotalPages" />

        </div>

    </div>

    @Html.Partial("_CommonSideNav")
</div>