@using EECIP.App_Logic.BusinessLogicLayer
@model EECIP.Models.vmForumPost
@{
    var postId = Model.Post.Id;
}
<div class="post">
    <div class="rowcreater hidden-xs">
        <a href="@Url.Action("UserCard", "Dashboard", new { strid = Model.Post.MembershipUser_Id })">
            <div class="circle-tile-heading" style="display:inline-grid; background-image:url(/Content/Images/Users/@(Model.Post.MembershipUser_Id).png)">
            </div>
        </a>
    </div>
    <div class="rowdetails clearfix"   style="margin-left:90px;">

        <!-- POST ACTIONS RIGHT BAR -->
        <div class="postadmin">
            <ul class="clearfix postadminlist">
                @if (Model.Post.MembershipUser_Id == Model.UserIDX || User.IsInRole("Admins"))
                {
                    <li>
                        <a class="btn-mvc btn-mvc-small btn-mvc-fullwidth" onclick="return confirm('Are you sure you want to delete?')" href="@Url.Action("DeletePost", "Forum", new { id = Model.Post.Id })">Delete</a>
                    </li>
                    <li>
                        <a class="btn-mvc btn-mvc-small btn-mvc-fullwidth" href="@Url.Action("EditPost", "Forum", new { id = Model.Post.Id })">Edit</a>
                    </li>
                    <li>
                        <a class="btn-mvc btn-mvc-small btn-mvc-fullwidth postshowattach" href="#">Attach</a>
                    </li>
                }
            </ul>
        </div>

        <div>
            <div class="postbodytop">
                <a class="postmember-@postId" href="@Url.Action("UserCard", "Dashboard", new { strid = Model.Post.MembershipUser_Id })">@Html.Raw(Model.PosterName)</a>
                posted this
                @EECIP.App_Logic.BusinessLogicLayer.Utils.GetPrettyDate(Model.Post.DateCreated.ToString())
                @if (User.IsInRole("Admins") && !string.IsNullOrEmpty(Model.Post.IpAddress))
                {
                    <text> - @Model.Post.IpAddress</text>
                }
                <span class="hidden-xs">
                    @if (Model.Post.DateEdited > Model.Post.DateCreated)
                    {
                        <text> - <a href="@Url.Action("GetPostEditHistory", "Post", new {id = Model.Post.Id})" class="showpostedithistory" data-name="">Last Edited  @EECIP.App_Logic.BusinessLogicLayer.Utils.GetPrettyDate(Model.Post.DateEdited.ToString())</a></text>
                    }
                </span>
            </div>

            <div id="postcontent-@postId" class="postcontent">
                <p>@Html.Raw(Model.Post.PostContent)</p>
            </div>

            <div class="postsocial">
                <ul>
                    <li>
                        <span class="glyphicon glyphicon-thumbs-up" style="@(Model.HasVotedUp == true ? "color:#5da548; font-weight:bold" : "") " aria-hidden="true"></span>
                        <span class="count" style="@(Model.HasVotedUp == true ? "color:#5da548; font-weight:bold" : "") ">@Model.UpVoteCount</span>
                        @if (Model.UserIDX != Model.Post.MembershipUser_Id)
                        {
                            if (!Model.HasVotedUp)
                            {
                                <a id="VoteUp" class="votelink" href="#" data-type="up" data-id="@postId" >Like</a>
                            }
                            else {
                                <a id="VoteUp" class="votelink" href="#" data-type="removeup" data-id="@postId" >Liked</a>
                            }
                        }
                    </li>
                    <li>
                        <span class="glyphicon glyphicon-thumbs-down" style="@(Model.HasVotedDown == true ? "color:#ec0d0d; font-weight:bold" : "") " aria-hidden="true"></span>
                        <span class="count" style="@(Model.HasVotedDown == true ? "color:#ec0d0d; font-weight:bold" : "") ">@Model.DownVoteCount</span>
                        @if (Model.UserIDX != Model.Post.MembershipUser_Id)
                        {
                            if (!Model.HasVotedDown)
                            {
                                <a id="VoteDown" class="votelink" href="#" data-type="down" data-id="@postId" >Dislike</a>
                            }
                            else {
                                <a id="VoteDown" class="votelink" href="#" data-type="removedown" data-id="@postId" >Disliked</a>
                            }
                        }

                    </li>
                    @*<li>
                            <span class="glyphicon @(Model.MemberHasFavourited ? "glyphicon glyphicon-star" : "glyphicon-star-empty")" aria-hidden="true"></span>
                            <span class="count">@Model.Favourites.Count</span>
                            @if (Html.CurrentMember() != null && Model.Post.User.Id != loggedOnUserId)
                            {
                                <a class="favourite" data-id="@postId" data-addremove="@(Model.MemberHasFavourited ? "remove" : "add")">
                                    @(Model.MemberHasFavourited ? Html.Lang("Post.Favourited") : Html.Lang("Post.Favourite"))
                                </a>
                            }
                        </li>*@


                        @if (Model.ParentTopic.Solved && Model.Post.IsSolution)
                        {
                            <li>
                                <span class="glyphicon glyphicon-ok text-green" aria-hidden="true"></span>
                                @if (Model.UserIDX == Model.ParentTopic.MembershipUser_Id || User.IsInRole("Admins")) {
                                    <a class="solutionlink solution text-bold" data-id="@postId" data-type="removeanswer" href="#">Solution</a>
                                }
                            </li>
                        }

                        else if (Model.ParentTopic.Solved == false
                            && Model.Post.IsTopicStarter == false 
                            && (Model.UserIDX != Model.Post.MembershipUser_Id || User.IsInRole("Admins")))
                        {
                            <li>
                                <span class="glyphicon glyphicon-question-sign" aria-hidden="true"></span>
                                <a class="solutionlink" data-id="@postId" data-type="answer" href="#">Mark As Solution</a>
                            </li>
                        }

                </ul>

            </div>

            @if (Model.PostFiles != null && Model.PostFiles.Count > 0)
                {
                
                    <div class="postuploadedfilesholder clearfix">
                        <p>Attached Files</p>
                        <ul>
                            @foreach (var file in Model.PostFiles.OrderByDescending(o => o.DateCreated))
                            {
                                <li>
                                    <a class="fileupload" href="@Url.Action("PostFileDownload", "Forum", new { id = file.Id})">
                                        

                                        @if (Utils.FileIsImage(file.FileName))
                                        {
                                            <span class="glyphicon glyphicon-picture" aria-hidden="true"></span>
                                        }
                                        else
                                        {
                                            <span class="glyphicon glyphicon-file" aria-hidden="true"></span>
                                        }
                                    </a>
                                    @if ((Model.UserIDX == file.MembershipUser_Id) || User.IsInRole("Admins"))
                                    {
                                        <a href="@Url.Action("PostFileDelete", "Forum", new { file.Id })" class="deleteupload" title="Delete">
                                            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                                        </a>
                                    }
                                    
                                    <div class="postedfilename">@file.FileName</div>
                                </li>
                            }
                        </ul>
                    </div>
                }

                @if (Model.UserIDX == Model.Post.MembershipUser_Id)
                {
                <div class="postuploadholder" style="display:none;">
                    @using (Html.BeginForm("PostFileUpload", "Forum", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        <div class="input-group input-group-sm">
                            <span class="input-group-btn">
                                <span class="btn btn-default btn-file">
                                    Browse: <input type="file" name="files" id="files" value="" multiple="multiple">
                                </span>
                            </span>
                            <input id="filename1" type="text" class="form-control" readonly="">
                        </div>
                        <p>
                            <input type="submit" value="Upload Files" class="btn-mvc btn-mvc-small postuploadbutton" />
                            <span style="display: none;" class="ajaxspinner" title="Please wait">Please Wait</span>
                            <input type="hidden" name="uploadPostId" id="uploadPostId" value="@Model.Post.Id" />
                        </p>
                    }
                </div>
                }

        </div>
    </div>
</div>

