@model EECIP.Models.vmForumPost
@{ 
    var postId = Model.Post.Id;
}
<div class="post">

    <div class="rowcreater hidden-xs">
        @*<a id="comment-@postId"></a>
        <a href="@Model.Post.User.NiceUrl">
            <img src="@Model.Post.User.MemberImage(SiteConstants.Instance.GravatarPostSize)" alt="@Model.Post.User.UserName">
        </a>*@
    </div>
    <div class="rowcreater hidden-xs">
        <a href="@Url.Action("UserCard", "Dashboard", new { strid = Model.Post.MembershipUser_Id })">
            <img src="/Content/Images/Users/@(Model.Post.MembershipUser_Id).png" alt="@Model.UserIDX">
        </a>
    </div>
    <div class="rowdetails clearfix">

        <!-- POST ACTIONS RIGHT BAR -->
        <div class="postadmin">
            <ul class="clearfix postadminlist">
                @*<li>
                    <a class="btn-mvc btn-mvc-small btn-mvc-fullwidth" href="#">Quote</a>
                </li>*@
                @if (Model.Post.MembershipUser_Id == Model.UserIDX)
                {
                    <li>
                        <a class="btn-mvc btn-mvc-small btn-mvc-fullwidth" onclick="return confirm('Are you sure you want to delete?')" href="@Url.Action("DeletePost", "Forum", new { id = Model.Post.Id })">Delete</a>
                    </li>
                    <li>
                        <a class="btn-mvc btn-mvc-small btn-mvc-fullwidth" href="@Url.Action("EditPostTopic", "Forum", new { id = Model.Post.Id })">Edit</a>
                    </li>
                    <li>
                        <a class="btn-mvc btn-mvc-small btn-mvc-fullwidth postshowattach" href="#">Attach</a>
                    </li>
                }
            </ul>
        </div>

        <div>
            <div class="postbodytop">
                @*@if (Model.Post.IsTopicStarter ?? false)
                {
                    <p><a href="@Model.ParentTopic.NiceUrl">@Model.ParentTopic.Name</a></p>
                }
                <a class="postmember-@postId" href="@Html.Raw(Model.Post.User.NiceUrl)">@Html.Raw(Model.Post.User.UserName)</a>*@
                posted this
                @EECIP.App_Logic.BusinessLogicLayer.Utils.GetPrettyDate(Model.Post.DateCreated.ToString())
                @if (User.IsInRole("Admins") && !string.IsNullOrEmpty(Model.Post.IpAddress))
                {
                    <text> - @Model.Post.IpAddress</text>
                }
                <span class="hidden-xs">
                    @if (Model.Post.DateEdited > Model.Post.DateCreated)
                    {
                        <text> - <a href="@Url.Action("GetPostEditHistory", "Post", new {id = Model.Post.Id})" class="showpostedithistory" data-name="">Last Edited  @EECIP.App_Logic.BusinessLogicLayer.Utils.GetPrettyDate(Model.Post.DateEdited.ToString())</a></text>
                    }
                </span>
            </div>

            <div id="postcontent-@postId" class="postcontent">
                <p>@Html.Raw(Model.Post.PostContent)</p>
            </div>
            
            <div class="postsocial">
                <ul>
                    <li>
                        <span class="glyphicon glyphicon-thumbs-up" aria-hidden="true"></span>
                        <span class="count">@Model.UpVoteCount</span>
                        @if (Model.AllowedToVote)
                        {
                            <a class="votelink" data-id="@postId" data-votetype="up" data-votetext="Vote Up" data-votedtext="Voted Up" data-hasvoted="@Model.HasVotedUp.ToString().ToLower()" style="@Html.Raw(Model.HasVotedDown ? "display:none;" : "")">
                                @(Model.HasVotedUp ? "Liked" : "Like")
                            </a>
                        }
                    </li>
                    <li>
                        <span class="glyphicon glyphicon-thumbs-down" aria-hidden="true"></span>
                        <span class="count">@Model.DownVoteCount</span>
                        @if (Model.AllowedToVote)
                        {
                            <a class="votelink" data-id="@postId" data-votetype="down" data-votetext="Vote Down" data-votedtext="Voted Down" data-hasvoted="@Model.HasVotedDown.ToString().ToLower()" style="@Html.Raw(Model.HasVotedUp ? "display:none;" : "")">
                                @(Model.HasVotedDown ? "Voted Down" : "Vote Down")
                            </a>
                        }
                    </li>
                    @*<li>
                        <span class="glyphicon @(Model.MemberHasFavourited ? "glyphicon glyphicon-star" : "glyphicon-star-empty")" aria-hidden="true"></span>
                        <span class="count">@Model.Favourites.Count</span>
                        @if (Html.CurrentMember() != null && Model.Post.User.Id != loggedOnUserId)
                        {
                            <a class="favourite" data-id="@postId" data-addremove="@(Model.MemberHasFavourited ? "remove" : "add")">
                                @(Model.MemberHasFavourited ? Html.Lang("Post.Favourited") : Html.Lang("Post.Favourite"))
                            </a>
                        }
                    </li>*@


                    @*@if (Model.ParentTopic.Solved && Model.Post.IsSolution)
                    {
                        <li>
                            <span class="glyphicon glyphicon-ok green-colour" aria-hidden="true"></span>
                        </li>
                    }
                    else if (!Model.ParentTopic.Solved && !Model.Post.IsTopicStarter && Html.CurrentMember() != null && (Model.ParentTopic.User.Id == loggedOnUserId || User.IsInRole(AppConstants.AdminRoleName)))
                    {
                        <li>
                            <span class="glyphicon glyphicon-question-sign" aria-hidden="true"></span>
                            <a class="solutionlink" data-id="@postId">Is Solution</a>
                        </li>
                    }*@

                </ul>

            </div>

            @*@if (Model.Post.IsTopicStarter && Model.ParentTopic.Tags.Any())
            {
                <div class="posttags tagsinput">
                    @foreach (var tag in Model.ParentTopic.Tags)
                    {
                        <span class="tag"><span><a href="@Html.Raw(tag.NiceUrl)">@Html.Raw(tag.Tag)</a></span></span>
                    }
                </div>
            }*@

            @*@if (Model.Post.Files != null && Model.Post.Files.Any())
            {
                <div class="postuploadedfilesholder clearfix">
                    <p>Attached Files</p>
                    <ul>
                        @foreach (var file in Model.Post.Files.OrderByDescending(o => o.DateCreated))
                        {
                            <li>
                                <a class="fileupload" href="@Url.Action("Download", "File", new { id = file.Id})">
                                    @if (AppHelpers.FileIsImage(file.FilePath))
                                    {
                                        <span class="glyphicon glyphicon-picture" aria-hidden="true"></span>
                                    }
                                    else
                                    {
                                        <span class="glyphicon glyphicon-file" aria-hidden="true"></span>
                                    }
                                </a>
                                @if (Model.Post.User.Id == loggedOnUserId || User.IsInRole(AppConstants.AdminRoleName))
                                {
                                    <a href="@Url.Action("DeleteUploadedFile", "Upload", new { file.Id })" class="deleteupload" title="@Html.LanguageString("Post.Delete")">
                                        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                                    </a>
                                }
                            </li>
                        }
                    </ul>
                </div>
            }*@

            @*@Html.Partial("_PostLikedBy", new MVCForum.Website.ViewModels.PostLikedByViewModel { Post = Model.Post, Votes = upVotes })*@

        </div>


    </div>

</div>
