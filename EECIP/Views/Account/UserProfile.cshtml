@model EECIP.Models.vmAccountUserProfile
@{
    ViewBag.Title = "User Profile";
    ViewBag.SubTitle = Model.OrgName;
    ViewBag.ShowTour = false;
}

@using (Html.BeginForm("UserProfile", "Account", FormMethod.Post, new { @class = "hbox stretch", @id = "norepostform", enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.UserIDX)
    @Html.HiddenFor(model => model.uListInd)

    <div class="row ">
        <div class="col-md-6 ">
            <section class="panel panel-default ">
                <div class="panel-heading">
                    Basic Info
                    <div class="panel-tools">
                        <a class="btn btn-xs panel-collapse collapses" href="#">
                        </a>
                    </div>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>First Name</label>
                                        @Html.TextBoxFor(model => model.FName, new { @class = "form-control", @placeholder = "", @maxlength = "40" })
                                        @Html.ValidationMessageFor(model => model.FName)
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Last Name</label>
                                        @Html.TextBoxFor(model => model.LName, new { @class = "form-control", @placeholder = "", @maxlength = "40" })
                                        @Html.ValidationMessageFor(model => model.LName)
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label>Email</label>
                                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "", @maxlength = "150" })
                                        @Html.ValidationMessageFor(model => model.Email)
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-9">

                                    <div class="form-group">
                                        <label>Work Phone</label>
                                        <div class="input-group">
                                            <span class="input-group-addon"> <i class="glyphicon glyphicon-phone-alt"></i> </span>
                                            @Html.TextBoxFor(model => model.Phone, new { @class = "form-control ", @maxlength = "12" })
                                        </div>
                                        <span class="help-block"><i class="clip-info"></i> Other members of the community might want to contact you for help with a project</span>
                                        @Html.ValidationMessageFor(model => model.Phone)
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Ext</label>
                                        @Html.TextBoxFor(model => model.PhoneExt, new { @class = "form-control", @placeholder = "", @maxlength = "4" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    @if (Model.uListInd != "a")
                    {
                        <a class=" btn btn-orange " href="@Url.Action("SetPermPassword")">Change Password</a>
    }
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Upload a Profile Picture</label>
                                <div class="btn-primary">
                                    @Html.TextBox("imageBrowes", "", new { type = "file", accept = ".png, .jpg, .jpeg, .bmp" })
                                </div>
                                <div id="imgPreview" class="thumbnail" style="@(Model.HasAvatar==true ? "" : "display:none")">
                                    @if (Model.HasAvatar == true)
                    {
                        <img class="img-responsive" id="targetImg" src="~/Content/Images/Users/@(Model.UserIDX).png?r=@Model.ImageUniqueStr" />
    }
    else
    {
                <img class="img-responsive" id="targetImg" src="" />
}
                                    <div class="caption" style="@(Model.HasAvatar!=true ? "" : "display:none")">
                                        <a href="#" onclick="ClearPreview()"><i class="glyphicon glyphicon-trash"></i></a>
                                        <span id="description"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        @if (User.IsInRole("Admins"))
                        {

                <div class="col-md-3">
                    <div class="form-group">
                        <label for="form-field-select-4">User is Active?</label>
                        @Html.CheckBox("ActInd", Model.ActInd, new { @class = "checkbox" })
                    </div>
                </div>
                        }
                        else
                        {
                @Html.HiddenFor(model => model.ActInd)
                        }
                        <div class="col-md-9">
                            <div class="form-group">
                                <label for="form-field-select-4">Excluded from points/badges</label>
                                @Html.CheckBox("ExcludeBadges", Model.ExcludeBadges, new { @class = "checkbox" })
                            </div>
                        </div>
                    </div>


                </div>
            </section>
        </div>

        <div class="col-md-6 ">
            <section class="panel panel-default ">
                <div class="panel-heading">
                    Professional Info
                    <div class="panel-tools">
                        <a class="btn btn-xs panel-collapse collapses" href="#">
                        </a>
                    </div>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Agency</label>
                                @if (Model.uListInd == "a")
            {
                    @Html.DropDownListFor(model => model.OrgIDX, Model.ddl_Agencies, "-Please Select-", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FName)
}
else
{
                    @Html.TextBoxFor(model => model.OrgName, new { @class = "form-control", @readonly = true })
}
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Job Title</label>
                                @Html.TextBoxFor(model => model.JobTitle, new { @class = "form-control", @placeholder = "", @maxlength = "40" })
                                @Html.ValidationMessageFor(model => model.JobTitle)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>LinkedIn URL</label>
                                @Html.TextBoxFor(model => model.LinkedIn, new { @class = "form-control", @placeholder = "", @maxlength = "100" })
                                @Html.ValidationMessageFor(model => model.LinkedIn)
                                <span class="help-block"><i class="clip-info"></i> This gives other users more information about you without having to reenter it here.</span>
                            </div>
                        </div>
                        <div class="col-md-12">
                            @if (Model.SelectedExpertise == null || Model.SelectedExpertise.Count == 0)
        {
                    <div class="alert alert-block alert-danger fade in">
                        <button data-dismiss="alert" class="close" type="button">×</button>
                        <h4 class="alert-heading"><i class="fa fa-times-circle"></i> Share your interests!</h4>
                        <p>
                            By specifying your expertise and interests, content in EECIP can be tailored to your specified interests, and others know who to contact with questions or project ideas.
                        </p>
                    </div>
}
                            <div class="form-group">
                                <label for="form-field-select-4">Expertise and/or Interests</label>
                                @Html.ListBoxFor(model => model.SelectedExpertise, Model.AllExpertise, new { multiple = "multiple", @id = "form-field-select-4", @class = "form-control search-select" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="form-field-select-4">Are you a Node Administrator?</label>
                                @Html.CheckBox("NodeAdmin", Model.NodeAdmin ?? false, new { @class = "checkbox" })
                            </div>
                        </div>
                       
                    </div>
                </div>
            </section>

        </div>
    </div>

    if (Model.uListInd == "a")
    {
        <a class="btn btn-default" href="@Url.Action("Users", "Admin")">Close @TempData["Error"]</a>
    }
    else
    {
        <a class="btn btn-default" href="@Url.Action("Index", "Dashboard")">Close</a>
    }
    <button type="submit" class="btn btn-primary">Save</button>

}



@section Scripts {
    @Scripts.Render("~/bundles/select2")

    <script src="https://cdn.getchaperone.com/embed/chaperone.js"></script>
    <script type="text/javascript">
        Chaperone.init({
            "api_key": "lBuTEvIH43bg5g",
            //"trigger": {
            //    "element": "#btnTour",
            //    "event": "click",
            //    "tutorial": 4072
            //}
        });
    </script>


    <script type="text/javascript">
        $(document).ready(function () {

            //function to initiate Select2
            $(".search-select").select2({
                placeholder: "Select expertise",
                allowClear: true,
                tags: true
            });

            //handler for when a new image is selected
            $("#imageBrowes").change(function () {
                var File = this.files;
                if (File && File[0]) {
                    ReadImage(File[0]);
                }
            });

        });

        //handler for when a new image is selected
        var ReadImage = function (file) {

            var reader = new FileReader;
            var image = new Image;

            reader.readAsDataURL(file);
            reader.onload = function (_file) {

                image.src = _file.target.result;
                image.onload = function () {

                    var height = this.height;
                    var width = this.width;
                    var type = file.type;
                    var size = ~~(file.size / 1024) + "KB";

                    $("#targetImg").attr('src', _file.target.result);
                    $("#description").text("Size:" + size + ", " + height + "X " + width + ", " + type + "");
                    $("#imgPreview").show();
                    $(".caption").show();
                }
            }
        }

        //handler for clearing preview
        var ClearPreview = function () {
            $("#imageBrowes").val('');
            $("#description").text('');
            $("#imgPreview").hide();
        }

    </script>
}

